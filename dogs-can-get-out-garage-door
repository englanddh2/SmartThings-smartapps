/**
 *  Garage Open and Interior Door Open?
 *
 *  Copyright 2018 D. England
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 */
definition(
    name: "Garage Open and Interior Door Open?",
    namespace: "englanddh2",
    author: "D. England",
    description: "Checks two doors to see if both doors are left open at the same time.",
    category: "Safety & Security",
    iconUrl: "https://s3.amazonaws.com/smartapp-icons/Meta/garage_contact.png",
    iconX2Url: "https://s3.amazonaws.com/smartapp-icons/Meta/garage_contact@2x.png",
    iconX3Url: "https://s3.amazonaws.com/smartapp-icons/Meta/garage_contact@3x.png")


preferences {
	section ("When this door opens/is open...") {
		input "door1", "capability.contactSensor", title: "Which garage door?", required: true
	}
    section ("And this door opens/is open...") {
		input "door2", "capability.contactSensor", title: "Which interior door?", required: true
	}
    section( "Notifications" ) {
        input "sendPushMessage", "enum", title: "Send a push notification?", metadata:[values:["Yes","No"]], required:false
        input "phone1", "phone", title: "Send a text message?", required: false
        input "msg", "text", title: "What is your message?", required: false
    }
}

def installed() {
	log.debug "Installed with settings: ${settings}"
	initialize()
}

def updated() {
	log.debug "Updated with settings: ${settings}"
	unsubscribe()
	initialize()
}

def initialize() {
	subscribe(door1, "contact.open", door1Handler)
    subscribe(door2, "contact.open", door2Handler)
}

def door1Handler(evt) {
	def door2Current = door2.currentContact
    log.debug "door2 current status is $door2Current"

	if (door2.currentContact == "open") {
		send(msg)
    }
}

def door2Handler(evt) {
	def door1Current = door1.currentContact
    log.debug "door1 current status is $door1Current"
	if (door1.currentContact == "open") {
		send(msg)
    }
}

private send(msg) {
    if ( sendPushMessage != "No" ) {
        log.debug( "sending push message" )
        sendPush( msg )
    }

    if ( phone1 ) {
        log.debug( "sending text message" )
        sendSms( phone1, msg )
    }

    log.debug msg
}
